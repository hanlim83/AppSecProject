@model AdminSide.Areas.PlatformManagement.Models.FirewallRule

@{
    ViewData["Title"] = "CreateFirewallRule";
}

<h2>CreateFirewallRule</h2>

<h4>FirewallRule</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["Exception"])))
        {
            <div class="alert alert-danger" role="alert">
                @ViewData["Exception"]
            </div>
        }
        <form asp-action="CreateFirewallRule">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <input type="hidden" asp-for="ServerID" value="@ViewData["ServerID"]" />
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select id="portType" asp-for="Type" class="form-control" onchange="portFill()">
                    <option value="HTTP">HTTP</option>
                    <option value="HTTPS">HTTPS</option>
                    <option value="SSH">SSH</option>
                    <option value="FTP">FTP</option>
                    <option value="ALL">ALL</option>
                    <option value="CUSTOM">CUSTOM</option>

                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Protocol" class="control-label"></label>
                <select asp-for="Protocol" class="form-control">
                    <option value="TCP">TCP</option>
                    <option value="UDP">UDP</option>
                    <option value="ICMP">ICMP</option>
                    <option value="ALL">ALL</option>
                </select>
                <span asp-validation-for="Protocol" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Port" class="control-label"></label>
                <input id="portInput" asp-for="Port" class="form-control" />
                <span asp-validation-for="Port" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Direction" class="control-label"></label>
                <select asp-for="Direction" class="form-control">
                    <option value="Incoming">Incoming</option>
                    <option value="Outgoing">Outgoing</option>
                    <option value="Both">Both</option>
                </select>
                <span asp-validation-for="Direction" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IPCIDR" class="control-label"></label>
                <input asp-for="IPCIDR" class="form-control" />
                <span asp-validation-for="IPCIDR" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ModifyServer" asp-route-ServerID="@ViewData["ServerID"]">Back to List</a>
</div>
<script>
    function portFill() {
        var selected = document.getElementById("portType").value;
        switch (selected) {
            case "HTTP":
                document.getElementById("portInput").value = 80;
                document.getElementById("portInput").readonly = true;
                break;
            case "HTTPS":
                document.getElementById("portInput").value = 443;
                document.getElementById("portInput").readonly = true;
                break;
            case "SSH":
                document.getElementById("portInput").value = 22;
                document.getElementById("portInput").readonly = true;
                break;
            case "FTP":
                document.getElementById("portInput").value = 21;
                document.getElementById("portInput").readonly = true;
                break;
            case "ALL":
                document.getElementById("portInput").readonly = true;
                break;
            default: 
                document.getElementById("portInput").value = null;
                document.getElementById("portInput").readonly = false;

        }
    }
    document.getElementById("portType").selectedIndex = -1;
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
