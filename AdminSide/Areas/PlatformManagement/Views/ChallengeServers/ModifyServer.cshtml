@model AdminSide.Areas.PlatformManagement.Models.Server

@{
    ViewData["Title"] = "Modify Server";
}
<h2>Modify</h2>
<h4>Subnet</h4>
<hr />
@if (!String.IsNullOrEmpty(Convert.ToString(TempData["Result"])))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="alert alert-danger" role="alert">
                @TempData["Result"]
            </div>
        </div>
    </div>
}
@if (!String.IsNullOrEmpty(Convert.ToString(TempData["Exception"])))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="alert alert-danger" role="alert">
                @TempData["Exception"]
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-lg-6 border-right">
        <form asp-action="Modification" method="post" class="needs-validation" novalidate>
            <h3>Server Settings</h3>
            <div class="form-group">
                <label for="ServerName">Server Name:</label>
                <input type="text" class="form-control" id="ServerName" name="ServerName" value="@Model.Name" pattern="^[A-Za-z0-9 _-]*[A-Za-z0-9][A-Za-z0-9 _ -]*$" required>
                <div class="invalid-feedback">A server needs a alphanumeric name</div>
            </div>
            <input type="hidden" id="ServerIDSrc" name="ID" value="@Model.ID" />
            <div class="form-group">
                <label for="OperatingSystem">Operating System:</label>
                <input type="text" disabled class="form-control-plaintext" id="OperatingSystem" name="OperatingSystem" value="@Html.ValueForModel(Model.OperatingSystem)" />
            </div>
            <div class="form-group">
                <label for="ServerWorkload">Server Workload</label>
                <select class="form-control" id="ServerWorkload" name="ServerWorkload" required>
                    @if (Model.Workload == Workload.Low)
                    {
                        <option value="Low" selected>Low</option>
                        <option value="Medium">Medium</option>
                        <option value="Large">Large</option>
                    }
                    @if (Model.Workload == Workload.Medium)
                    {
                        <option value="Low">Low</option>
                        <option value="Medium" selected>Medium</option>
                        <option value="Large">Large</option>
                    }
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="Large">Large</option>
                </select>
                <div class="invalid-feedback">Server's Workload must be selected</div>
            </div>
            <div class="form-group">
                <label for="ServerStorage">Server Assigned Storage:</label>
                <input type="number" class="form-control" id="ServerStorage" name="ServerStorage" value="@Model.StorageAssigned" min="@Model.StorageAssigned" max="1000" placeholder="Size in Gigabytes" required>
                <div class="invalid-feedback">You cannot assign a lower storage space to your server!</div>
            </div>
            <div class="form-group">
                <label>Server Tenancy:</label>
                @if (Model.Tenancy == Tenancy.Shared)
                {
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyS" value="Shared" checked required>
                        <label class="form-check-label" for="ServerTenancyS">Shared</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyDI" value="Dedicated Instance">
                        <label class="form-check-label" for="ServerTenancyDI">Dedicated Instance</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyDH" value="Dedicated Hardware">
                        <label class="form-check-label" for="ServerTenancyDH">Dedicated Hardware</label>
                        <div class="invalid-feedback">Select the server's tenancy</div>
                    </div>
                }
                @if (Model.Tenancy == Tenancy.DedicatedInstance)
                {
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyS" value="Shared" required>
                        <label class="form-check-label" for="ServerTenancyS">Shared</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyDI" value="Dedicated Instance" checked>
                        <label class="form-check-label" for="ServerTenancyDI">Dedicated Instance</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyDH" value="Dedicated Hardware">
                        <label class="form-check-label" for="ServerTenancyDH">Dedicated Hardware</label>
                        <div class="invalid-feedback">Select the server's tenancy</div>
                    </div>
                }
                @if (Model.Tenancy == Tenancy.DedicatedHardware)
                {
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyS" value="Shared" required>
                        <label class="form-check-label" for="ServerTenancyS">Shared</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyDI" value="Dedicated Instance">
                        <label class="form-check-label" for="ServerTenancyDI">Dedicated Instance</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="ServerTenancy" id="ServerTenancyDH" value="Dedicated Hardware" checked>
                        <label class="form-check-label" for="ServerTenancyDH">Dedicated Hardware</label>
                        <div class="invalid-feedback">Select the server's tenancy</div>
                    </div>
                }
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary float-right">Save Changes</button>
            </div>
        </form>
    </div>
    <div class="col-lg-6 border-left">
        <h3>Network Settings</h3>
        <div class="form-group">
            <label for="ServerSubnet">Server Subnet: </label>
            <input type="text" disabled class="form-control-plaintext" id="ServerSubnet" name="SubnetCIDR" value="@Html.ValueForModel(Model.LinkedSubnet.Name) (@Html.ValueForModel(Model.LinkedSubnet.IPv4CIDR) / @Html.ValueForModel(Model.LinkedSubnet.IPv6CIDR))" />
        </div>
        <div class="form-group">
            <p class="form-text">Server Firewall Rules</p>
            <form asp-action="CreateFirewallRule" method="get">
                <input type="hidden" id="ServerIDDest" name="ServerID" value="" />
                <button type="submit" class="btn btn-secondary float-right">Add Rule</button>
            </form>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Direction</th>
                        <th scope="col">Type</th>
                        <th scope="col">Protocol</th>
                        <th scope="col">Port</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Incoming and Outgoing Traffic</td>
                        <td>IMPLICT-DENY</td>
                        <td>TCP and UDP</td>
                        <td>All Ports not listed below</td>
                        <td>You can't edit/remove this rule</td>
                    </tr>
                    @foreach (var rule in Model.FirewallRules)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => rule.Direction)</td>
                            <td>@Html.DisplayFor(modelItem => rule.Type)</td>
                            <td>@Html.DisplayFor(modelItem => rule.Protocol)</td>
                            <td>@Html.DisplayFor(modelItem => rule.Port)</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <form asp-action="DeleteFirewallRule" method="post">
                                        <input type="hidden" name="ID" value="@rule.ID" />
                                        <button type="submit" class="btn btn-danger">Delete Rule</button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <button type="button" class="btn btn-secondary float-left" data-toggle="modal" data-target="#confirmationModal">Go back</button>
    </div>
</div>

<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure that you want to go back? All current entries will be lost!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <a asp-area="PlatformManagement" asp-controller="ChallengeServers" asp-action="" class="btn btn-primary">Yes</a>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
        var serverID = document.getElementById('ServerIDSrc').value;
        document.getElementById('ServerIDDest').value = serverID;
    </script>
}