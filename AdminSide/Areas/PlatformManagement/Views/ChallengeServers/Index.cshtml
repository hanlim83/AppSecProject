@model IEnumerable<AdminSide.Areas.PlatformManagement.Models.Server>
@{
    ViewData["Title"] = "Challenge Servers";
}
<div class="row">
    <div class="col-lg-3">
        <partial name="../_MainNav.cshtml" />
    </div>
    <div class="col-lg-9">
        <div class="row">
            <div class="col-lg-12">
                @if (!String.IsNullOrEmpty(Convert.ToString(TempData["Result"])))
                {
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="alert alert-danger" role="alert">
                                @TempData["Result"]
                            </div>
                        </div>
                    </div>
                }
                @if (!String.IsNullOrEmpty(Convert.ToString(TempData["Exception"])))
                {
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="alert alert-danger" role="alert">
                                @TempData["Exception"]
                            </div>
                        </div>
                    </div>
                }
                @if (Model.Count() == 0)
                {
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="alert alert-warning" role="alert">
                                <i class="fas fa-info-circle"></i> There are currently no servers created!
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-lg-12">
                        <a class="btn btn-primary" asp-action="SelectTemplate" style="float:right; margin-top:20px; margin-bottom:20px;">Create New Server</a>
                    </div>
                </div>
                @if (Model.Count() != 0)
                {
                    @foreach (var server in Model)
                    {
                        <div class="row">
                            <div class="col-lg-10">
                                <div class="card">
                                    <div class="card-header">
                                        @server.Name
                                    </div>
                                    <div class="card-body">
                                        <div class="btn-group float-right">
                                            <div class="btn-group">
                                                @if (server.State != State.Starting && server.State != State.Stopping)
                                                {
                                                    @if (server.State == State.Running)
                                                    {
                                                        <form asp-action="ChangeState" method="post">
                                                            <input type="hidden" name="serverID" value="@server.ID" />
                                                            <input type="hidden" name="action" value="Stop" />
                                                            <button type="submit" class="btn btn-secondary">Stop Server</button>
                                                        </form>
                                                    }
                                                    @if (server.State == State.Stopped)
                                                    {
                                                        <form asp-action="ChangeState" method="post">
                                                            <input type="hidden" name="serverID" value="@server.ID" />
                                                            <input type="hidden" name="action" value="Run" />
                                                            <button type="submit" class="btn btn-secondary">Start Server</button>
                                                        </form>
                                                    }
                                                    <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <span class="sr-only">Toggle Dropdown</span>
                                                    </button>
                                                    <div class="dropdown-menu">
                                                        <form asp-action="Credentials" method="post">
                                                            <input type="hidden" name="serverID" value="@server.ID" />
                                                            <button class="dropdown-item" type="submit">Get Credentials</button>
                                                        </form>
                                                        <button class="dropdown-item" type="button" data-toggle="modal" data-target="#warningModal" onclick="modifyServerInput(@server.ID)">Modify Server Settings</button>
                                                        <form asp-action="CreateTemplate" asp-controller="ServerTemplates" method="post">
                                                            <input type="hidden" name="serverID" value="@server.ID" />
                                                            <button class="dropdown-item" type="submit">Use as Template</button>
                                                        </form>
                                                        <div class="dropdown-divider"></div>
                                                        <form asp-action="DeleteServer" method="post">
                                                            <input type="hidden" name="serverID" value="@server.ID" />
                                                            <button class="dropdown-item" type="submit">Delete Server</button>
                                                        </form>
                                                    </div>
                                                }

                                            </div>
                                        </div>
                                        @if (server.OperatingSystem.Contains("Amazon Linux"))
                                        {
                                            <div class="float-left" style="display: inline-block; vertical-align: middle; width: 150px; height:150px; border-radius: 50%; background-repeat: no-repeat; background-position: center center; background-size: cover; background-image: url(/images/AWSLinux.png);">
                                            </div>
                                        }
                                        @if (server.OperatingSystem.Contains("Red Hat"))
                                        {
                                            <div class="float-left" style="display: inline-block; vertical-align: middle; width: 150px; height:150px; border-radius: 50%; background-repeat: no-repeat; background-position: center center; background-size: cover; background-image: url(/images/RedHatLinux.png);">
                                            </div>
                                        }
                                        @if (server.OperatingSystem.Contains("SUSE"))
                                        {
                                            <div class="float-left" style="display: inline-block; vertical-align: middle; width: 150px; height:150px; border-radius: 50%; background-repeat: no-repeat; background-position: center center; background-size: cover; background-image: url(/images/SUSELinux.png);">
                                            </div>
                                        }
                                        @if (server.OperatingSystem.Contains("Ubuntu"))
                                        {
                                            <div class="float-left" style="display: inline-block; vertical-align: middle; width: 150px; height:150px; border-radius: 50%; background-repeat: no-repeat; background-position: center center; background-size: cover; background-image: url(/images/UbuntuLinux.png);">
                                            </div>
                                        }
                                        @if (server.OperatingSystem.Contains("Windows"))
                                        {
                                            <div class="float-left" style="display: inline-block; vertical-align: middle; width: 150px; height:150px; border-radius: 50%; background-repeat: no-repeat; background-position: center center; background-size: cover; background-image: url(/images/Windows.png);">
                                            </div>
                                        }
                                        @if (server.OperatingSystem.Contains("Kali Linux"))
                                        {
                                            <div class="float-left" style="display: inline-block; vertical-align: middle; width: 150px; height:150px; border-radius: 50%; background-repeat: no-repeat; background-position: center center; background-size: cover; background-image: url(/images/KaliLinux.png);">
                                            </div>
                                        }
                                        <p class="card-text" style="position: relative; left: 10px;">Server State: @Html.ValueForModel(server.State.ToString())</p>
                                        <p class="card-text" style="position: relative; left: 10px;">Server Visibililty: @Html.ValueForModel(server.Visibility.ToString())</p>
                                        <p class="card-text" style="position: relative; left: 10px;">Server IP Address: @Html.ValueForModel(server.IPAddress)</p>
                                        <p class="card-text" style="position: relative; left: 10px;">Server DNS Hostname: @Html.ValueForModel(server.DNSHostname)</p>
                                        <p class="card-text" style="position: relative; left: 160px;">Operating System: @Html.ValueForModel(server.OperatingSystem)</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                    }
                }
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="warningModal" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="warningModal">Server Downtime Requried</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                As some changes may disrupt the server's current performance, the server will need to be stopped before you can modify it. Do you want to continue?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <form asp-action="ModifyServer" method="post">
                    <input id="modifyServerInput" type="hidden" name="serverID" value="" />
                    <button type="submit" class="btn btn-primary">Yes</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        var refresh_rate = 30;
        var last_user_action = 0;
        var lost_focus = true;
        var focus_margin = 10;
        var allow_refresh = true;

        function keydown(evt) {
            if (!evt) evt = event;
            if (evt.keyCode == 192) {
                toggle_on_off();
            }
        }

        function toggle_on_off() {
            if (can_i_refresh) {
                allow_refresh = false;
                console.log("Auto Refresh Off");
            } else {
                allow_refresh = true;
                console.log("Auto Refresh On");
            }
        }

        function reset() {
            last_user_action = 0;
            console.log("Reset");
        }

        function windowHasFocus() {
            lost_focus = false;
            console.log(" <~ Has Focus");
        }

        function windowLostFocus() {
            lost_focus = true;
            console.log(" <~ Lost Focus");
        }

        setInterval(function () {
            last_user_action++;
            refreshCheck();
        }, 1000);

        function can_i_refresh() {
            if (last_user_action >= refresh_rate && lost_focus && allow_refresh) {
                return true;
            }
            return false;
        }

        function refreshCheck() {
            var focus = window.onfocus;

            if (can_i_refresh()) {
                window.location.reload();
                reset();
            } else {
                console.log("Timer");
            }

        }
        window.addEventListener("focus", windowHasFocus, false);
        window.addEventListener("blur", windowLostFocus, false);
        window.addEventListener("click", reset, false);
        window.addEventListener("mousemove", reset, false);
        window.addEventListener("keypress", reset, false);
        window.onkeyup = keydown;
        function modifyServerInput(ID) {
            $('#modifyServerInput').val(ID);
        }
    </script>
}